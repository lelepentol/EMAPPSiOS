<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="3" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="EMAPPS iOS Suite" duration-ms="315522" started-at="2020-07-23T11:00:43 WIB" finished-at="2020-07-23T11:05:59 WIB">
    <groups>
    </groups>
    <test name="BrowseUpcomingEventScenarioTest" duration-ms="315522" started-at="2020-07-23T11:00:43 WIB" finished-at="2020-07-23T11:05:59 WIB">
      <class name="tests.BrowseUpcomingEvent">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:tests.BrowseUpcomingEvent@27808f31]" name="beforeSuite" is-config="true" duration-ms="341" started-at="2020-07-23T11:00:43 WIB" finished-at="2020-07-23T11:00:43 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="setup()[pri:0, instance:tests.BrowseUpcomingEvent@27808f31]" name="setup" is-config="true" duration-ms="20596" started-at="2020-07-23T11:00:43 WIB" finished-at="2020-07-23T11:01:04 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.BrowseUpcomingEvent@27808f31]" name="beforeMethod" is-config="true" duration-ms="9" started-at="2020-07-23T11:01:04 WIB" finished-at="2020-07-23T11:01:04 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BrowseUpcomingEvent.browseEventAllCategories()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="browseEventAllCategories()[pri:1, instance:tests.BrowseUpcomingEvent@27808f31]" name="browseEventAllCategories" duration-ms="226575" started-at="2020-07-23T11:01:04 WIB" finished-at="2020-07-23T11:04:51 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browseEventAllCategories -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:tests.BrowseUpcomingEvent@27808f31]" name="getResult" is-config="true" duration-ms="5" started-at="2020-07-23T11:04:51 WIB" finished-at="2020-07-23T11:04:51 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=browseEventAllCategories status=SUCCESS method=BrowseUpcomingEvent.browseEventAllCategories()[pri:1, instance:tests.BrowseUpcomingEvent@27808f31] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.BrowseUpcomingEvent.browseEventAllCategories()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.BrowseUpcomingEvent@27808f31]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-07-23T11:04:51 WIB" finished-at="2020-07-23T11:04:51 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BrowseUpcomingEvent.browseEventSpecificCategory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="browseEventSpecificCategory()[pri:2, instance:tests.BrowseUpcomingEvent@27808f31]" name="browseEventSpecificCategory" duration-ms="20721" started-at="2020-07-23T11:04:51 WIB" finished-at="2020-07-23T11:05:11 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browseEventSpecificCategory -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:tests.BrowseUpcomingEvent@27808f31]" name="getResult" is-config="true" duration-ms="2" started-at="2020-07-23T11:05:11 WIB" finished-at="2020-07-23T11:05:11 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=browseEventSpecificCategory status=SUCCESS method=BrowseUpcomingEvent.browseEventSpecificCategory()[pri:2, instance:tests.BrowseUpcomingEvent@27808f31] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.BrowseUpcomingEvent.browseEventSpecificCategory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.BrowseUpcomingEvent@27808f31]" name="beforeMethod" is-config="true" duration-ms="2" started-at="2020-07-23T11:05:11 WIB" finished-at="2020-07-23T11:05:11 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BrowseUpcomingEvent.browseEventByKeywords()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="browseEventByKeywords()[pri:3, instance:tests.BrowseUpcomingEvent@27808f31]" name="browseEventByKeywords" duration-ms="47533" started-at="2020-07-23T11:05:11 WIB" finished-at="2020-07-23T11:05:59 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browseEventByKeywords -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:tests.BrowseUpcomingEvent@27808f31]" name="getResult" is-config="true" duration-ms="1" started-at="2020-07-23T11:05:59 WIB" finished-at="2020-07-23T11:05:59 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=browseEventByKeywords status=SUCCESS method=BrowseUpcomingEvent.browseEventByKeywords()[pri:3, instance:tests.BrowseUpcomingEvent@27808f31] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.BrowseUpcomingEvent.browseEventByKeywords()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:tests.BrowseUpcomingEvent@27808f31]" name="teardown" is-config="true" duration-ms="1110" started-at="2020-07-23T11:05:59 WIB" finished-at="2020-07-23T11:06:00 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.BrowseUpcomingEvent@27808f31]" name="endReport" is-config="true" duration-ms="483" started-at="2020-07-23T11:06:00 WIB" depends-on-methods="pages.BaseClass.teardown" finished-at="2020-07-23T11:06:01 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- tests.BrowseUpcomingEvent -->
    </test> <!-- BrowseUpcomingEventScenarioTest -->
  </suite> <!-- EMAPPS iOS Suite -->
</testng-results>
